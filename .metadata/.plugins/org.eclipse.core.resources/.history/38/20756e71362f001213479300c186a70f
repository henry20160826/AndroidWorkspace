package hu.Ktable;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Calendar;
import java.util.Locale;

import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.hssf.util.HSSFColor;
import org.apache.poi.poifs.filesystem.POIFSFileSystem;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import android.app.Activity;
import android.content.ContentValues;
import android.content.Intent;
import android.content.pm.ActivityInfo;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.os.Environment;
import android.util.Log;
import android.view.GestureDetector;
import android.view.GestureDetector.OnGestureListener;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.view.Window;
import android.view.WindowManager;
import android.view.animation.AnimationUtils;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.ViewFlipper;

public class KtableActivity extends Activity implements OnGestureListener,
		OnTouchListener {
	public static class_info[][] ke;// 课程信息
	public static boolean[] classmap;
	public static String[][] StrKe;// 输出字符串
	public static boolean change = false;
	public static SQLiteDatabase dbW;
	public static DatabaseHelper dbhelper;
	private GestureDetector detector;
	private ViewFlipper flipper;
	private Calendar calendar;
	private String[] wek;
	private int weekday, style, preStyle;
	private TextView week1, week2;
	private TextView clas11, clas12, clas13, clas14, clas15, clas16, clas21,
			clas22, clas23, clas24, clas25, clas26;
	private int id_textview;
	boolean firstopen = true, first_page = true;

	// firstopen 是否为第一次打开
	// page是否为flipper第一页

	/**
	 * 
	 * @author Kamui
	 * 
	 */

	/**
	 * 
	 * 自定义类class_info，课程信息
	 * 
	 */
	public class class_info {
		// private String name;
		// private String teacher;
		// private String room;
		// private String kind;
		// private String time;
		// private String last;
		// private String state;
		// private String note;
		public String[] data;

		void setdata(String[] m) {
			data = m;
		}

		String[] getdata() {

			return data;
		}
	};

	@Override
	public void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		requestWindowFeature(Window.FEATURE_NO_TITLE);// 隐藏标题
		getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);// 设置全屏
		super.onCreate(savedInstanceState);

		dbhelper = new DatabaseHelper(KtableActivity.this, "user", null, 1);
		dbW = dbhelper.getWritableDatabase();
		style = dbhelper.readstyle(dbW);
		if (style != 4) {
			set_activity_style();
			getItem();
			detector = new GestureDetector(this);
			setTextviewOntouchListener();
			wek = getResources().getStringArray(R.array.week);

			classmap = new boolean[6];
			ke = new class_info[7][6];
			StrKe = new String[7][6];
			Locale.setDefault(Locale.CHINA);
			calendar = Calendar.getInstance();
			weekday = calendar.get(Calendar.DAY_OF_WEEK);
			weekday -= 2;
			if (weekday > 4 || weekday < 0) {
				weekday = 0;
			}
			// ke=getResources().getStringArray(R.array.clas);
			// 读取文件***************************************************************************************
			// read();
			// 显示部分***************************************************************************************
			new_class_info();
			readExcel();
			combination();
			write_to_textview();
		} else {
			set_activity_style();
		}

	}

	private void setTextviewOntouchListener() {
		clas11.setOnTouchListener(this);
		clas12.setOnTouchListener(this);
		clas13.setOnTouchListener(this);
		clas14.setOnTouchListener(this);
		clas15.setOnTouchListener(this);
		clas16.setOnTouchListener(this);
		clas21.setOnTouchListener(this);
		clas22.setOnTouchListener(this);
		clas23.setOnTouchListener(this);
		clas24.setOnTouchListener(this);
		clas25.setOnTouchListener(this);
		clas26.setOnTouchListener(this);
		// flipper.setOnTouchListener(this);
	}

	/**
	 * activity生命周期
	 */
	@Override
	protected void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
		if (false == firstopen) {
			style = dbhelper.readstyle(dbW);
			if (4 != style) {
				set_activity_style();
				getItem();
				write_to_textview();
				detector = new GestureDetector(this);
				setTextviewOntouchListener();
			} else {
			}
		}
	}

	@Override
	protected void onPause() {
		// TODO Auto-generated method stub
		super.onPause();
		first_page = true;
		firstopen = false;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see android.app.Activity#finish()
	 */
	@Override
	public void finish() {
		// TODO Auto-generated method stub
		if (change) {
			int r = 0;
			int i, j, time, k;
			r = getclassmap();
			r = r * 8 + 7 - r;
			try {
				String SDPath = Environment.getExternalStorageDirectory()
						.getPath();
				String filename = SDPath + "//kebiao.xls";
				File file = new File(filename);
				InputStream is = new FileInputStream(file);
				POIFSFileSystem fs = new POIFSFileSystem(is);
				HSSFWorkbook book = new HSSFWorkbook(fs);// 打开空文件出错
				Sheet sheet = book.getSheetAt(book.getSheetIndex("Sheet2"));
				
				CellStyle green=book.createCellStyle();
				green.setBorderBottom(CellStyle.BORDER_THIN);
				green.setBottomBorderColor(IndexedColors.BLACK.getIndex());
				green.setBorderLeft(CellStyle.BORDER_THIN);
				green.setLeftBorderColor(IndexedColors.BLACK.getIndex());
				green.setBorderRight(CellStyle.BORDER_THIN);
				green.setRightBorderColor(IndexedColors.BLACK.getIndex());
				green.setBorderTop(CellStyle.BORDER_THIN);
				green.setTopBorderColor(IndexedColors.BLACK.getIndex());
				green.setFillPattern(IndexedColors.GREEN.getIndex());
				Row row;
				Cell cell;
				for (i = 0; i < r; i++) {
					row = sheet.createRow(i);
					for (j = 0; j < 8; j++) {
						row.createCell(j);
					}
				}
				time = 0;
				k = 0;
				for (j = 1; j < 8; j++) {
					for (i = 1; i < r;) {
						cell = sheet.getRow(i).getCell(j);
						if (null != ke[j - 1][time].data) {
							cell.setCellValue(ke[j - 1][time].data[k]);
							k++;
							time += k / 8;
							k = k % 8;
							time = time % 6;
							i++;
						} else {
							if (true == classmap[time]) {
								i += 8;
							} else {
								i++;
							}
							time++;
							time = time % 6;
						}
					}
				}
				for (i = 1; i < 8; i++) {
					cell = sheet.getRow(0).getCell(i);
					cell.setCellValue(wek[i-1]);
					cell.setCellStyle(green);
				}
				String num[]=getResources().getStringArray(R.array.num);
				i=1;
				for(j=0;j<6;j++)
				{
					cell = sheet.getRow(i).getCell(0);
					if(true==classmap[j])
					{
						i+=8;
					}
					else
					{
						i++;
					}
					cell.setCellValue(num[j]);
				}
				FileOutputStream fileOut = new FileOutputStream(filename);
				book.write(fileOut);
				fileOut.close();
			} catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				System.out.print(e);
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				System.out.print(e);
			}

		}
		dbhelper.close();
		dbW.close();
		super.finish();

	}

	private int getclassmap() {
		int day, time, num = 0;
		for (time = 0; time < 6; time++) {
			classmap[time] = false;
		}
		for (time = 0; time < 6; time++) {
			for (day = 0; day < 7; day++) {
				if (null != ke[day][time].data) {
					break;
				}
			}
			if (day != 7) {
				classmap[time] = true;
				num++;
			}
		}
		return num;
	}

	// 4全局模式
	// 0 默认皮肤
	// 1 黑色炫酷
	// 2 绿色雨林
	// 3 蓝色海洋
	/**
	 * 设置皮肤
	 */
	private void set_activity_style() {
		switch (style) {
		case 1:// 粉色女生
			setContentView(R.layout.k_pink);
			flipper = (ViewFlipper) findViewById(R.id.ViewFlipper00);
			break;
		case 2:// 绿色雨后
			setContentView(R.layout.k_green);
			flipper = (ViewFlipper) findViewById(R.id.ViewFlipper00);
			break;
		case 3:// 蓝色雨滴
			setContentView(R.layout.k_blue);
			flipper = (ViewFlipper) findViewById(R.id.ViewFlipper00);
			break;
		case 4:
			setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
			setContentView(R.layout.quaju);
			break;
		default:// 默认皮肤
			setContentView(R.layout.k_shuimo);
			flipper = (ViewFlipper) findViewById(R.id.ViewFlipper00);
			break;
		}
	}

	/**
	 * 得到activity中的所有控件
	 */
	private void getItem() {
		week1 = (TextView) findViewById(R.id.week1);
		clas11 = (TextView) findViewById(R.id.clas11);
		clas12 = (TextView) findViewById(R.id.clas12);
		clas13 = (TextView) findViewById(R.id.clas13);
		clas14 = (TextView) findViewById(R.id.clas14);
		clas15 = (TextView) findViewById(R.id.clas15);
		clas16 = (TextView) findViewById(R.id.clas16);
		week2 = (TextView) findViewById(R.id.week2);
		clas21 = (TextView) findViewById(R.id.clas21);
		clas22 = (TextView) findViewById(R.id.clas22);
		clas23 = (TextView) findViewById(R.id.clas23);
		clas24 = (TextView) findViewById(R.id.clas24);
		clas25 = (TextView) findViewById(R.id.clas25);
		clas26 = (TextView) findViewById(R.id.clas26);
	}

	/**
	 * private void read() { int ai = 0, j = 0, k; boolean hasSD = false; String
	 * SDPath; BufferedReader reader = null; try { hasSD =
	 * Environment.getExternalStorageState().equals(
	 * android.os.Environment.MEDIA_MOUNTED); if (false == hasSD) { ke[x][0] =
	 * ("找不到SD卡"); } else {
	 * 
	 * SDPath = Environment.getExternalStorageDirectory().getPath(); //
	 * ke[x][0]=SDPath; File file = new File(SDPath + "//kebiao.txt");
	 * FileInputStream fis = new FileInputStream(file); BufferedInputStream in =
	 * new BufferedInputStream(fis); reader = new BufferedReader(new
	 * InputStreamReader(in, "GBK")); String data = null; for (ai = 0; ai < 5;
	 * ai++) { for (j = 0; j < 6; j++) { for (k = 0; k < 2; k++) { data =
	 * reader.readLine(); if (0 == k && data.equals("")) { break; } else { if (0
	 * == k) { ke[ai][j] = data; } else { ke[ai][j] += "\n" + data; } } } } }
	 * reader.close(); } } catch (FileNotFoundException e) { ke[x][0] +=
	 * ("文件打开失败" + e); return; } catch (IOException e) { ke[x][0] += ("文件读取异常" +
	 * e); return; } }
	 */
	/**
	 * 读取excel
	 */
	void new_class_info() {
		int i, j;
		for (i = 0; i < 7; i++) {
			for (j = 0; j < 6; j++) {
				ke[i][j] = new class_info();
			}

		}
	}

	public void readExcel() {
		try {
			/**
			 * 后续考虑问题,比如Excel里面的图片以及其他数据类型的读取
			 **/
			// boolean hasSD = Environment.getExternalStorageState().equals(
			// android.os.Environment.MEDIA_MOUNTED);
			String SDPath = Environment.getExternalStorageDirectory().getPath();
			File file = new File(SDPath + "//kebiao.xls");
			InputStream is = new FileInputStream(file);
			HSSFWorkbook book = new HSSFWorkbook(is);
			book.getNumberOfSheets();
			// 获得第一个工作表对象
			Sheet sheet = book.getSheetAt(book.getSheetIndex("sheet1"));
			int Rows = sheet.getLastRowNum();
			int Cols = 8;
			int knum = 0, day = 0;
			int k;
			int key = Rows / 8;
			System.out.println("总行数:" + Rows);
			System.out.println("总列数:" + Cols);
			for (int i = 1; i < Cols; i++) {
				for (int j = 1; j <= Rows;) {
					String[] m1 = new String[8];
					if ("" == sheet.getRow(j).getCell(i).toString()) {
						k = j + 8;
						for (j++; j < k && j <= Rows; j++) {
							if ("" != sheet.getRow(j).getCell(i).toString()) {
								break;
							}
						}
						if (j == k) {
							k = 1;
						} else {
							k = j - k + 8;
						}
						k += knum;
						for (; knum < k; knum++) {
							ke[day][knum] = new class_info();
						}
						if (knum > 5) {
							day++;
							knum = 0;
						}
					} else {
						for (k = 0; k < 8; k++) {
							m1[k] = sheet.getRow(k + j).getCell(i).toString();
						}
						j += 8;
						ke[day][knum].setdata(m1);
						knum++;
						if (knum > 5) {
							day++;
							knum = 0;
						}
					}
				}
			}
			is.close();
		} catch (Exception e) {
			System.out.println(e);
			Toast.makeText(getApplicationContext(), e.toString(),
					Toast.LENGTH_LONG);
		}
	}

	private void combination() {
		int i, j, k;
		String[] something = new String[8];
		something[0] = "\n";
		something[1] = "\t";
		something[2] = "\t";
		something[3] = "\t";
		something[4] = "\n";
		something[5] = "\n";
		something[6] = "\t";
		something[7] = "";
		try {
			for (i = 0; i < 7; i++) {
				for (j = 0; j < 6; j++) {
					for (k = 0; k < 8; k++) {
						if (ke[i][j].data == null) {
							StrKe[i][j] = "";
							break;
						} else {
							if (0 == k) {
								StrKe[i][j] = ke[i][j].data[k];
							} else {
								StrKe[i][j] += something[k - 1]
										+ ke[i][j].data[k];
							}
						}
					}
				}
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			StrKe[0][0] = "读文件错误";
			Toast.makeText(getApplicationContext(), e.toString(),
					Toast.LENGTH_LONG);
		}
	}

	/**
	 * 向TextView中写入数据
	 */
	private void write_to_textview() {
		if (true == first_page) {
			week1.setText(wek[weekday]);
			clas11.setText(StrKe[weekday][0]);
			clas12.setText(StrKe[weekday][1]);
			clas13.setText(StrKe[weekday][2]);
			clas14.setText(StrKe[weekday][3]);
			clas15.setText(StrKe[weekday][4]);
			clas16.setText(StrKe[weekday][5]);
		} else {
			week2.setText(wek[weekday]);
			clas21.setText(StrKe[weekday][0]);
			clas22.setText(StrKe[weekday][1]);
			clas23.setText(StrKe[weekday][2]);
			clas24.setText(StrKe[weekday][3]);
			clas25.setText(StrKe[weekday][4]);
			clas26.setText(StrKe[weekday][5]);
		}
	}

	/**
	 * 监听activity手势
	 * */
	public boolean onDown(MotionEvent arg0) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX,
			float velocityY) {
		// TODO Auto-generated method stub
		if (e1.getX() - e2.getX() > 120) {
			weekday++;
			if (weekday > 4) {
				weekday = 0;
			}
			first_page = !first_page;
			write_to_textview();
			flipper.setInAnimation(AnimationUtils.loadAnimation(this,
					R.anim.turnpage_right_in));
			flipper.setOutAnimation(AnimationUtils.loadAnimation(this,
					R.anim.turnpage_left_out));
			flipper.showNext();
		} else if (e1.getX() - e2.getX() < -120) {
			weekday--;
			if (weekday < 0) {
				weekday = 4;
			}
			first_page = !first_page;
			write_to_textview();
			flipper.setInAnimation(AnimationUtils.loadAnimation(this,
					R.anim.turnpage_left_in));
			flipper.setOutAnimation(AnimationUtils.loadAnimation(this,
					R.anim.turnpage_right_out));
			flipper.showPrevious();
		}
		return true;
	}

	@Override
	public void onLongPress(MotionEvent e) {
		// TODO Auto-generated method stub
	}

	@Override
	public boolean onScroll(MotionEvent e1, MotionEvent e2, float distanceX,
			float distanceY) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void onShowPress(MotionEvent e) {
		// TODO Auto-generated method stub
	}

	@Override
	public boolean onSingleTapUp(MotionEvent e) {
		// TODO Auto-generated method stub
		Intent intent = new Intent();
		intent.setClass(KtableActivity.this, EditActivity.class);
		switch (id_textview) {
		case R.id.clas11:
		case R.id.clas21:
			intent.putExtra("time", 0);
			break;
		case R.id.clas12:
		case R.id.clas22:
			intent.putExtra("time", 1);
			break;
		case R.id.clas13:
		case R.id.clas23:
			intent.putExtra("time", 2);
			break;
		case R.id.clas14:
		case R.id.clas24:
			intent.putExtra("time", 3);
			break;
		case R.id.clas15:
		case R.id.clas25:
			intent.putExtra("time", 4);
			break;
		case R.id.clas16:
		case R.id.clas26:
			intent.putExtra("time", 5);
			break;
		}
		intent.putExtra("week", weekday);
		startActivity(intent);
		return true;
	}

	@Override
	public boolean onTouchEvent(MotionEvent event) {
		return this.detector.onTouchEvent(event);
	}

	/**
	 * 加载菜单
	 * */
	public boolean onCreateOptionsMenu(Menu menu) {
		MenuInflater a = getMenuInflater();
		a.inflate(R.menu.menu, menu);
		return true;
	}

	/**
	 * 监听菜单
	 * */
	public boolean onOptionsItemSelected(MenuItem Item) {
		Intent open = new Intent();
		switch (Item.getItemId()) {
		case R.id.about:
			open.setClass(KtableActivity.this, about.class);
			startActivity(open);
			Toast.makeText(this, "打开关于", Toast.LENGTH_LONG).show();
			break;
		case R.id.help:
			open.setClass(KtableActivity.this, help.class);
			startActivity(open);
			Toast.makeText(this, "打开帮助", Toast.LENGTH_LONG).show();
			break;
		case R.id.set:
			open.setClass(KtableActivity.this, set.class);
			startActivity(open);
			Toast.makeText(this, "打开设置", Toast.LENGTH_LONG).show();
			break;
		case R.id.model:
			if (style != 4) {
				preStyle = style;
				style = 4;
				ContentValues b = new ContentValues();
				b.put("data", 4);
				dbW.update("user", b, "id=?", new String[] { "4" });
				set_activity_style();
			} else {
				style = preStyle;
				ContentValues b = new ContentValues();
				b.put("data", preStyle);
				dbW.update("user", b, "id=?", new String[] { "before" });
			}
			break;
		default:
			Toast.makeText(this, "未知错误", Toast.LENGTH_LONG).show();
			break;

		}
		return true;
	}

	/**
	 * click监听器
	 */
	class TextListener implements OnClickListener {

		@Override
		public void onClick(View v) {
			Intent intent = new Intent();
			intent.setClass(KtableActivity.this, EditActivity.class);
			switch (v.getId()) {
			case R.id.clas11:
			case R.id.clas21:
				intent.putExtra("time", 0);
				break;
			case R.id.clas12:
			case R.id.clas22:
				intent.putExtra("time", 1);
				break;
			case R.id.clas13:
			case R.id.clas23:
				intent.putExtra("time", 2);
				break;
			case R.id.clas14:
			case R.id.clas24:
				intent.putExtra("time", 3);
				break;
			case R.id.clas15:
			case R.id.clas25:
				intent.putExtra("time", 4);
				break;
			case R.id.clas16:
			case R.id.clas26:
				intent.putExtra("time", 5);
				break;
			}
			intent.putExtra("week", weekday);
			startActivity(intent);
		}
	}

	@Override
	public boolean onTouch(View v, MotionEvent event) {
		// TODO Auto-generated method stub
		id_textview = v.getId();
		// click 没有滑动
		return false;

	}
}
